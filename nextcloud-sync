#!/usr/bin/python3

import argparse
import configparser
from pathlib import Path
from subprocess import run
from typing import Any, Union

from tealprint import TealConfig, TealLevel, TealPrint

HOME_DIR = Path.home()
CONFIG_FILE = HOME_DIR.joinpath(".nextcloud-sync-config")
EXCLUDE_FILE = HOME_DIR.joinpath(".nextcloud-exclude-list")
LOCK_FILE = HOME_DIR.joinpath(".nextcloud.lock")
NEXTCLOUD_DIR = HOME_DIR.joinpath("nextcloud")
NEXTCLOUD_URL = "https://nextcloud.senth.org"

parser = argparse.ArgumentParser()
parser.add_argument("-s", "--silent", action="store_true", help="No output")
args = parser.parse_args()

if args.silent:
    TealConfig.level = TealLevel.none


class Config:
    def __init__(self) -> None:
        self.silent: str = args.silent
        self.user: Union[str, None] = None
        self.password: Union[str, None] = None
        self._set_from_config_file()

    def _set_from_config_file(self) -> None:
        if not CONFIG_FILE.exists():
            return

        config = configparser.ConfigParser()
        config.read(CONFIG_FILE)

        # Login
        if "Login" in config:
            login_config = config["Login"]
            self.user = self._read_from_config(login_config, "User")
            self.password = self._read_from_config(login_config, "Password")

    def _read_from_config(self, config: configparser.SectionProxy, varname: str) -> Any:
        if varname in config:
            return config[varname]
        if varname.lower() in config:
            return config[varname]

    def validate(self) -> None:
        if not self.user:
            TealPrint.error("No user has been set in either the config file or argument", exit=True)
        if not self.password:
            TealPrint.error("No password has been set in either the config file or argument", exit=True)


config = Config()
config.validate()

command = [
    "nextcloudcmd",
    "-h",
    "--non-interactive",
    "-u",
    config.user,
    "-p",
    config.password,
]

if config.silent:
    command.append("-s")

if EXCLUDE_FILE.exists():
    command.append("--unsyncedfolders")
    command.append(EXCLUDE_FILE)

command.append(NEXTCLOUD_DIR)
command.append(NEXTCLOUD_URL)

if LOCK_FILE.exists():
    TealPrint.info("â„¹ Skipping sync because lockfile exists. Another instance is probably already syncing...")
    TealPrint.info(f"If not, you can always delete the {LOCK_FILE}")
else:
    try:
        LOCK_FILE.touch()
        TealPrint.verbose(str(command))
        run(command)
    except KeyboardInterrupt:
        LOCK_FILE.unlink()
