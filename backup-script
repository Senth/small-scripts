#!/bin/bash
#############################################################
# This script is licensed under Creative Commons BY license
# 
# Copyright 2011-2020 (c) Matteus Magnusson
#
# @version 3
#############################################################

ERRORS=0

CUR_DATE=`eval date +%Y-%m-%d`
set $(date)
WEEKDAY=$1
DAY_OF_MONTH=$2

BACKUP_PATH="/mnt/backup/"
MYSQL_DUMP_FILE="/tmp/mysqldump.sql"
TEMP_LIST="/tmp/backup_list.txt"
MAIL_HEADER="to: senth.wallace@gmail.com
from: matteus.magnusson@gmail.com
content-type: text/html"


DAYS_TO_KEEP=45

BACKUP_FILES_MEDIA=(
	"/mnt/lvm/appz"
	"/mnt/lvm/audiobooks"
	"/mnt/lvm/backups"
	"/mnt/lvm/ebooks"
	"/mnt/lvm/games"
	"/mnt/lvm/movies/Documentaries"
	"/mnt/lvm/music"
	"/mnt/lvm/other_movies"
	"/mnt/lvm/owncloud"
	"/mnt/lvm/personal_development"
	"/mnt/lvm/podcasts"
	"/mnt/lvm/pron/Wet/best-parts"
	"/mnt/lvm/pron/2GTS"
	"/mnt/lvm/pron/Amateur"
	"/mnt/lvm/senth/*"
	"/mnt/lvm/spiddekauga"
)

BACKUP_FILES_ROOT=(
	"/bin"
	"/boot"
	"/etc"
	"/lib32"
	"/lib64"
	"/opt"
	"/root"
	"/usr"
	"/var"
	# Separate files
	"$MYSQL_DUMP_FILE"
)

# How full the disk needs to be before it warns about a full disk.
WARN_PERCENTAGE=95


#########################
#	Remove old files 	#
#########################
find $BACKUP_PATH -mtime +$DAYS_TO_KEEP -exec rm -rf {} \;


#######################
# WEEKLY FULL BACKUP
#######################
BACKUP_NAME="rootfs"

# Create SQL dump of databases (every day)
mysqldump -u backup_user --password=ueloir5UnoS --all-databases > $MYSQL_DUMP_FILE
echo "Sql dump complete"

# Weekly full backup of all data and config
if [ "$WEEKDAY" = "Mon" ]; then
	# Backup as tar
	BACKUP_FILE_NAME="${BACKUP_PATH}${BACKUP_NAME}_${CUR_DATE}_full.tgz"
	tar cfz "${BACKUP_FILE_NAME}" ${BACKUP_FILES_ROOT[@]}
	
	# Error check, file does not exist
	if [ ! -f $BACKUP_FILE_NAME ]; then
		ERRORS=1
		ERROR_MSG="$ERROR_MSG <br />${BACKUP_NAME} full backup failed, the file $BACKUP_FILE_NAME does not exist!"
	fi
else
	BACKUP_FILE_NAME="${BACKUP_PATH}${BACKUP_NAME}_${CUR_DATE}_diff.tgz"
	
	find ${BACKUP_FILES_ROOT[@]} -depth -type f \( -ctime -1 -o -mtime -1 \) -print > $TEMP_LIST
	tar cfzT "${BACKUP_FILE_NAME}" $TEMP_LIST
	rm -f $TEMP_LIST
	
	# Error check, file does not exist
	if [ ! -f $BACKUP_FILE_NAME ]; then
		ERRORS=1
		ERROR_MSG="$ERROR_MSG <br />${BACKUP_NAME} diff backup failed, the file $BACKUP_FILE_NAME does not exist!"
	fi
fi

# Remove temporary files
rm -f $MYSQL_DUMP_FILE


#######################################################################
# MONTHLY FULL BACKUP
# for music, pictures, user files that take up a large amount of space
#######################################################################
BACKUP_NAME="lvm"

# NEW_WEEK should be equal to 0 if it's a new week
NEW_WEEK=$(( ( $DAY_OF_MONTH - 1 ) % 7 ))

# Runs the first of every month
if [ "$DAY_OF_MONTH" = "01" ]; then
	BACKUP_FILE_NAME="${BACKUP_PATH}${BACKUP_NAME}_${CUR_DATE}_full.tgz"
	tar cfz "${BACKUP_FILE_NAME}" ${BACKUP_FILES_MEDIA[@]}

	# Error check, file does not exist
	if [ ! -f $BACKUP_FILE_NAME ]; then
		ERRORS=1
		ERROR_MSG="$ERROR_MSG <br /> full backup failed, the file $BACKUP_FILE_NAME does not exist!"
	fi

# Runs every day after the first
else
	# Do a week diff so that we don't have 30 daily diffs.
	if [ $NEW_WEEK -eq 0 ]; then
		days_to_backup=7
		BACKUP_TYPE="week"
	else
		days_to_backup=1
		BACKUP_TYPE="daily"
	fi

	BACKUP_FILE_NAME="${BACKUP_PATH}${BACKUP_NAME}_${CUR_DATE}_${BACKUP_TYPE}_diff.tgz"
	find ${BACKUP_FILES_MEDIA[@]} -depth -type f \( -ctime -$days_to_backup -o -mtime -$days_to_backup \) -print > $TEMP_LIST
	tar cfzT "${BACKUP_FILE_NAME}" $TEMP_LIST
	rm -f $TEMP_LIST

	
	# Error check, file does not exist
	if [ ! -f $BACKUP_FILE_NAME ]; then
		ERRORS=1
		ERROR_MSG="$ERROR_MSG <br />$BACKUP_NAME $BACKUP_TYPE diff backup failed, the file $BACKUP_FILE_NAME does not exist!"
	fi
fi
 
# ########################
# # Mail if errors
# ########################
if [ $ERRORS -eq 1 ]; then
	echo "$MAIL_HEADER
subject: senth.org: One or more backups failed!
$ERROR_MSG" | sendmail -t
fi
 
# ##############################################
# # Mail if backup drive is getting full
# ##############################################
DISK="/mnt/backup"
PARTITION=`df -h | grep $DISK`
USED_PERCENT=`echo $PARTITION | awk '{print $5}'`
# Remove % symbol
USED_PERCENT=${USED_PERCENT//%/}

if [ $USED_PERCENT -ge $WARN_PERCENTAGE ]; then
	SIZE=`echo $PARTITION | awk '{print $2}'`
	USED_SIZE=`echo $PARTITION | awk '{print $3}'`
	FREE_SIZE=`echo $PARTITION | awk '{print $4}'`

	BACKUP_MESSAGE="<strong>Used (%):</strong> $USED_PERCENT%<br />
					<strong>Size:</strong> $SIZE<br />
					<strong>Free:</strong> $FREE_SIZE<br />
					<strong>Used:</strong> $USED_SIZE"


	echo "$MAIL_HEADER
subject: senth.org: Backup disk at critical percentage, $USED_PERCENT% USED
$BACKUP_MESSAGE" | sendmail -t
fi
